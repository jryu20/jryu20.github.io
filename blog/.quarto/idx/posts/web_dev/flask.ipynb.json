{"title":"Web Application with Flask","markdown":{"yaml":{"title":"Web Application with Flask","format":{"html":{"toc":true}},"author":"Jun Ryu","date":"2023-02-03","categories":["application","Flask"]},"headingText":"Overview","containsRefs":false,"markdown":"\n\n\nToday, we will demonstrate how to create a simple web application using `Flask`. \n\nThe application we will develop is a *message bank*. By the end, a user should be able to do two things on the application:\n\n1. **Submit** messages to the bank\n2. **View** a random sample of messages stored in the bank\n\n# 1. Enable Submissions\n---\n\nFirst, we will create a base template, `base.html`:\n\n```html\n<!doctype html>\n<link rel=\"stylesheet\" href=\"{{ url_for('static', filename='style.css') }}\">\n<h1>A Simple Message Bank</h1>\n<title>{% block title %}{% endblock %}</title>\n<nav>\n  <ul>\n    <li><a href=\"{{ url_for('submit') }}\">Submit a message</a></li>\n    <li><a href=\"{{ url_for('view') }}\">View messages</a></li>\n  </ul>\n</nav>\n\n<section class=\"content\">\n<!-- will be used for submit.html or view.html -->\n    \n  <header>\n    {% block header %}{% endblock %}\n  </header>\n  {% block content %}{% endblock %}\n</section>\n```\n\nWe will also create `submit.html`, which will `extend` `base.html` and contain the following elements:\n\n1. A text box for submitting a message.\n2. A text box for submitting the name of the user.\n3. A “submit” button.\n\nAdditionally, we will thank the user if a message is submitted.\n\n```html\n{% extends 'base.html' %}\n\n{% block header %}\n  <h1>{% block title %}Submit{% endblock %}</h1>\n{% endblock %}\n\n{% block content %}\n  <form method=\"post\">\n      <label for=\"message\">Your message: </label>\n      <br><br>\n      <input type=\"text\" name=\"message\" id=\"message\">\n      <br><br>\n      <label for=\"handle\">Your name or handle: </label>\n      <br><br>\n      <input type=\"text\" name=\"handle\" id=\"handle\">\n      <br><br>\n      <input type=\"submit\" value=\"Submit message\">\n  </form>\n  \n  {% if message %}\n  <p>Thank you for the submission!</p>\n  {% endif %}\n{% endblock %}\n```\n\nSo far, our combined page will look like this[^1]:\n\n[^1]: Note that the `css` code for the website is attached in the [appendix](#appendix).\n\n![](demo1.png)\n\n---\n\nNow, we will create a new file `app.py`. The first function we will write in this file is `get_message_db()`, which will handle creating the database of messages.\n\n```python\n# import correct packages\nfrom flask import Flask, render_template, request\nfrom flask import redirect, url_for, abort, g\nimport sqlite3\nimport numpy as np\n\napp = Flask(__name__)\n\ndef get_message_db():\n    \"\"\"\n    Returns a database in the g attribute of the app with a table to host messages\n    \"\"\"\n    \n    try:\n        return g.message_db # if the database exists\n    except:\n        g.message_db = sqlite3.connect(\"messages_db.sqlite\")\n        # check if a table exists, create one if not \n        cmd = 'CREATE TABLE IF NOT EXISTS messages(id INT, handle TEXT, message TEXT)' \n        cursor = g.message_db.cursor()\n        cursor.execute(cmd)\n        return g.message_db\n```\n\nNext, we write a function `insert_message(request)`, which will handle inserting a user message into the database.\n\n```python\ndef insert_message(request):\n    \"\"\"\n    insert a user message into the database\n    \"\"\"\n    db = get_message_db() # connect to database\n    cursor = db.cursor()\n    cmd = 'SELECT COUNT(*) FROM messages' \n    new_id = cursor.execute(cmd).fetchone()[0] + 1 # set unique id for each message\n    # use f-string\n    cmd = f\"INSERT INTO messages VALUES ({new_id}, '{request.form['handle']}', '{request.form['message']}')\"\n    cursor.execute(cmd)\n    db.commit() # save row insertion\n    db.close()\n```\n\nFinally, we will write a function `submit()` to `render_template()` the `submit.html` template.\n\n# 2. View Random Submissions\n---\n\nfjaklfa\n\n# Appendix\n\n---\n\nHere is the code for `style.css` that was used to customize the app:\n\n```css\n\nbody, h1, h2, h3, h4, h5, h6, p, ul, ol, li {\n  margin: 0;\n  padding: 0;\n  font-family: Arial, sans-serif;\n}\n\nbody {\n  background-color: #f5f5f5;\n  color: #333;\n}\n\nh1 {\n  font-size: 32px;\n  font-weight: bold;\n  margin-bottom: 20px;\n  color: #007bff;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n  text-align: center;\n}\n\nnav {\n  background-color: #333;\n  color: #fff;\n  padding: 10px;\n}\n\nnav ul {\n  list-style-type: none;\n  text-align: center;\n}\n\nnav li {\n  display: inline-block;\n  margin-right: 10px;\n}\n\nnav a {\n  color: #fff;\n  text-decoration: none;\n}\n\nnav a:hover {\n  text-decoration: underline;\n}\n\n.content {\n  margin: 20px;\n}\n\nheader {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.block {\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 4px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n.submit-link,\n.view-link {\n  display: inline-block;\n  padding: 10px 20px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  text-decoration: none;\n}\n\n.submit-link:hover,\n.view-link:hover {\n  background-color: #0056b3;\n}\n```\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"flask.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.313","theme":"yeti","title-block-banner":true,"title":"Web Application with Flask","author":"Jun Ryu","date":"2023-02-03","categories":["application","Flask"]},"extensions":{"book":{"multiFile":true}}}}}