{"title":"Web Scraping with Scrapy","markdown":{"yaml":{"title":"Web Scraping with Scrapy","format":{"html":{"toc":true}},"author":"Jun Ryu","date":"2023-01-26","categories":["visualizations","webscraping"]},"headingText":"1. Setup","containsRefs":false,"markdown":"\n\n> What movie or TV shows share actors with your favorite movie or show?\n\nWe will try to answer the above question by building a simple \"recommender system\" that looks at the number of shared actors between two movies/shows.\n\nThis blog post will consist of *two* main parts:\n\n1. We will build a webscraper to scrape [TMDB](https://www.themoviedb.org/).\n2. We will sort our scraped results and return an appropriate visualization.\n\n\n\n---\n\n## a. Pick a Movie/TV Show\n\nFirst, we will locate the starting page. For this post, let's use *The Office*, a classic American sitcom. \n\n*The Office*'s TMDB page is found here: https://www.themoviedb.org/tv/2316-the-office. We will use this link later.\n\n## b. Initialize Project\n\nNow, we will create a new GitHub repository, which will host all our Scrapy files. Then, we will open a terminal in the location of the repository and type:\n\n```\nscrapy startproject TMDB_scraper\ncd TMDB_scraper\n```\n\n## c. Tweak Settings\n\nThe GitHub repository will now have a lot of files in it, but let's direct our attention to the file called `settings.py`.\n\nIn this file, we will edit two things:\n\n1. Add the following line: ```CLOSESPIDER_PAGECOUNT = 20```\n2. Modify `User_Agent` to equal `'Mozilla/5.0 (iPad; CPU OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148'`.\n\nThe former will allow us to test our scraper without downloading too much data each time. The latter will prevent us from getting errors while scraping.\n\n# 2. Scraper\n\n---\n\nThe fun part! First, we will create a file named `tmdb_spider.py` inside the `spiders` directory. Then, we add the following lines:\n\n```python\nimport scrapy\n\nclass TmdbSpider(scrapy.Spider):\n    name = 'tmdb_spider'\n    \n    start_urls = ['https://www.themoviedb.org/tv/2316-the-office']\n```\n\nNote that `start_urls` is defined as our link from Part 1a. If one had a different favorite movie/TV show, they will need to replace this url with their favorite movie/TV show's TMDB page. Now, we will write three parsing methods:\n\n## a. parse()\n\nThis method will navigate from `start_urls` to the *Full Cast & Crew* page:\n\n```python\ndef parse(self, response):\n        \"\"\"\n        directs to the cast page given the starting tv/movie site\n        \"\"\"\n        \n        yield scrapy.Request(\"https://www.themoviedb.org/tv/2316-the-office/cast\", callback = self.parse_full_credits)\n```\n\n\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"result_vis copy.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.313","theme":"yeti","title-block-banner":true,"title":"Web Scraping with Scrapy","author":"Jun Ryu","date":"2023-01-26","categories":["visualizations","webscraping"]},"extensions":{"book":{"multiFile":true}}}}}